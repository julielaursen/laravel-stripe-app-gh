on: [pull_request]
jobs:
  pull-request-ci-job:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306 
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:

      - name: Checkout app code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: shivammathur/setup-php@verbose
        with:
          php-version: 7.4
          coverage: xdebug
        env:
          update: true

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Create test database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS test;'

      - name: Setup Database
        run: |
          php artisan migrate --no-interaction -vvv
          php artisan db:seed

      - name: Download Codecov binary
        run: curl -Os https://uploader.codecov.io/latest/linux/codecov
      
      - name: Verify integrity get GPG
        run: curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step

      - name: Get SHAsums
        run: | 
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig   

      - name: Test Signature
        run: gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
      
      - name: Test SHAsums
        run: shasum -a 256 -c codecov.SHA256SUM

      - name: Run Service Testsuite with Coverage
        run: vendor/bin/phpunit --testsuite="Services Tests" --coverage-clover=coverage-service.xml

      - name: Upload Service coverage report
        run: ./codecov -F service -f coverage-service.xml
      
      - name: Run Controller Testsuite with Coverage
        run: vendor/bin/phpunit --testsuite="Controllers Tests" --coverage-clover=coverage-controller.xml

      - name: Upload Controller coverage report
        run: ./codecov -F controller -f coverage-controller.xml

      - name: Run Complete Testsuite with Coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload overall coverage report
        run: ./codecov -F main -f coverage.xml